/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.31.6.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { CosmWasmClient, SigningCosmWasmClient } from "@cosmjs/cosmwasm-stargate";
import { IQueryClientProvider, ISigningClientProvider, IMessageComposerProvider } from "./contractContextBase";
import { HackCw20QueryClient } from "./HackCw20.client";
import { HackCw20Client } from "./HackCw20.client";
import { HackCw20 } from "./HackCw20.provider";
import { CounterQueryClient } from "./Counter.client";
import { CounterClient } from "./Counter.client";
import { Counter } from "./Counter.provider";
import { NeutronShieldQueryClient } from "./NeutronShield.client";
import { NeutronShieldClient } from "./NeutronShield.client";
import { NeutronShield } from "./NeutronShield.provider";
export interface IContractsContext {
  hackCw20: IQueryClientProvider<HackCw20QueryClient> & ISigningClientProvider<HackCw20Client>;
  counter: IQueryClientProvider<CounterQueryClient> & ISigningClientProvider<CounterClient>;
  neutronShield: IQueryClientProvider<NeutronShieldQueryClient> & ISigningClientProvider<NeutronShieldClient>;
}
export const getProviders = (address?: string, cosmWasmClient?: CosmWasmClient, signingCosmWasmClient?: SigningCosmWasmClient) => ({
  hackCw20: new HackCw20({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  }),
  counter: new Counter({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  }),
  neutronShield: new NeutronShield({
    address,
    cosmWasmClient,
    signingCosmWasmClient
  })
});